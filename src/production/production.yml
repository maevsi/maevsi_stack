secrets:
  grafana_admin_email:
    # The observation dashboard's admin email.
    external: true
  grafana_admin_password:
    # The observation dashboard's admin password.
    external: true
  grafana_admin_user:
    # The observation dashboard's admin user.
    external: true
  postgres-backup_db:
    # The database's name.
    external: true
  traefik_cf-dns-api-token:
    # The DNS provider's DNS API token.
    external: true
  traefik_cf-zone-api-token:
    # The DNS provider's zone API token.
    external: true
services:
  adminer:
    deploy:
      labels:
        - (( append ))
        - traefik.http.routers.adminer_secure.tls.certresolver=default
  grafana:
    deploy:
      labels:
        - (( append ))
        - traefik.http.routers.grafana_secure.tls.certresolver=default
    secrets:
      - (( append ))
      - grafana_admin_email
      - grafana_admin_password
      - grafana_admin_user
  maevsi:
    deploy:
      labels:
        - (( append ))
        - traefik.http.routers.maevsi_secure.tls.certresolver=default
    image: ghcr.io/maevsi/maevsi:3.19.4
    user: (( prune ))
  maevsi_beta:
    # You can access the main project frontend's beta version at [beta.localhost](https://beta.localhost/).
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.maevsi_beta.entryPoints=web
        - traefik.http.routers.maevsi_beta.middlewares=redirectscheme
        - traefik.http.routers.maevsi_beta.rule=Host(`beta.${STACK_DOMAIN}`)
        - traefik.http.routers.maevsi_beta_secure.entryPoints=web-secure
        - traefik.http.routers.maevsi_beta_secure.middlewares=maevsi_cors
        - traefik.http.routers.maevsi_beta_secure.rule=Host(`beta.${STACK_DOMAIN}`)
        - traefik.http.services.maevsi_beta.loadbalancer.server.port=3000
        - traefik.http.routers.maevsi_beta_secure.tls.certresolver=default
    environment:
      NUXT_PUBLIC_SITE_URL: https://beta.${STACK_DOMAIN}
      NUXT_PUBLIC_TURNSTILE_SITE_KEY: ${TURNSTILE_SITE_KEY}
      NUXT_PUBLIC_VIO_GOOGLE_ANALYTICS_ID: ${GOOGLE_ANALYTICS_ID}
      POSTGRAPHILE_JWT_PUBLIC_KEY_FILE: /run/config/postgraphile_jwt-public-key
      POSTGRES_DB_FILE: /run/secrets/postgres_db
      POSTGRES_ROLE_MAEVSI_TUSD_PASSWORD_FILE: /run/secrets/postgres_role_maevsi-tusd_password
      POSTGRES_ROLE_MAEVSI_TUSD_USERNAME_FILE: /run/secrets/postgres_role_maevsi-tusd_username
    image: ghcr.io/maevsi/maevsi:3.20.0-beta.1
    secrets:
      - maevsi_turnstile-key
      - postgres_db
      - postgres_role_maevsi-tusd_password
      - postgres_role_maevsi-tusd_username
    volumes:
      - ./configurations/postgraphile/jwtRS256.key.pub:/run/config/postgraphile_jwt-public-key:ro
  minio: (( prune ))
  portainer:
    deploy:
      labels:
        - (( append ))
        - traefik.http.routers.portainer_secure.tls.certresolver=default
  postgraphile:
    deploy:
      labels:
        - (( append ))
        - traefik.http.middlewares.postgraphile_auth.plugin.body-forward-auth.AuthUrl=http://maevsi:3001/api/auth-proxy
        - traefik.http.routers.postgraphile_secure.tls.certresolver=default
  postgres_backup:
    # You cannot access the database backup directly.
    environment:
      POSTGRES_DB_FILE: /run/secrets/postgres-backup_db
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_USER_FILE: /run/secrets/postgres_user
    image: prodrigestivill/postgres-backup-local:16-alpine
    secrets:
      - postgres-backup_db
      - postgres_password
      - postgres_user
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ../production/backups/postgres/:/backups/
  prometheus:
    deploy:
      labels:
        - (( append ))
        - traefik.http.routers.prometheus_secure.tls.certresolver=default
  rabbitmq:
    deploy:
      labels:
        - (( append ))
        - traefik.http.routers.rabbitmq_secure.tls.certresolver=default
  sqitch:
    image: ghcr.io/maevsi/sqitch:3.1.2
    volumes: (( prune ))
  stomper:
    deploy:
      labels:
        - (( append ))
        - traefik.http.routers.stomper_secure.tls.certresolver=default
    image: ghcr.io/maevsi/stomper:1.1.0
    user: (( prune ))
    volumes: (( prune ))
  traefik:
    command:
      - (( prepend ))
      - --certificatesResolvers.default.acme.email=${TRAEFIK_ACME_EMAIL}
      - --certificatesResolvers.default.acme.storage=/etc/traefik/acme/acme.json
      - --certificatesResolvers.default.acme.dnsChallenge.provider=${TRAEFIK_ACME_PROVIDER}
    deploy:
      labels:
        - (( append ))
        - traefik.http.routers.traefik_secure.tls.certresolver=default
    environment:
      CF_DNS_API_TOKEN_FILE: /run/secrets/traefik_cf-dns-api-token
      CF_ZONE_API_TOKEN_FILE: /run/secrets/traefik_cf-zone-api-token
    secrets:
      - traefik_cf-dns-api-token
      - traefik_cf-zone-api-token
  traefik_certs-dumper:
    # You cannot access the reverse proxy's certificate helper directly.
    command:
      - file
      - --clean=false
      - --crt-name="$STACK_DOMAIN"
      - --dest=/etc/traefik/acme/
      - --key-name="$STACK_DOMAIN"
      - --source=/etc/traefik/acme/acme.json
      - --version=v2
      - --watch
    environment:
      STACK_DOMAIN: ${STACK_DOMAIN}
    image: ldez/traefik-certs-dumper:v2.8.3
    volumes:
      - acme_data:/etc/traefik/acme/
  tusd:
    deploy:
      labels:
        - (( append ))
        - traefik.http.routers.tusd_secure.tls.certresolver=default
version: "3.7"
volumes:
  acme_data:
    # The reverse proxy's certificate data.
    {}
  minio_data: (( prune ))
